# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1


commands:
  print_pipeline_id:
    description: "print the CIRCLE_WORKFLOW_ID to the console"
    parameters:
      id:
        type: string
    steps:
      - run: echo << parameters.id >>

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  # say-hello:
  #   # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
  #   # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
  #   docker:
  #     - image: cimg/base:stable
  #   # Add steps to the job
  #   # See: https://circleci.com/docs/2.0/configuration-reference/#steps
  #   steps:
  #     - checkout
  #     - run:
  #         name: "Say hello"
  #         command: "echo Hello, World!"


  # save_hello_world_output:

  #   docker:
  #     - image: circleci/node:13.8.0

  #   steps:
  #     - checkout
  #     - run:
  #         command: echo "text to output here" > ~/output.txt
  #     - persist_to_workspace:
  #         root: ~/
  #         paths:
  #           - output.txt

  # print_output_file:

  #   docker:
  #     - image: circleci/node:13.8.0

  #   steps:
  #     - attach_workspace:
  #           at: ~/

  #     - print_pipeline_id
  #     - run:
  #         command: cat ~/output.txt

  my_job:
    docker:
      - image: circleci/node:13.8.0

    steps:
      - print_pipeline_id:
          id: << pipeline.id >>

  test_fail_job:
    docker:
      - image: circleci/node:13.8.0 

    steps:
      - run: return 1

  onfail_job_check:
    docker:
      - image: circleci/node:13.8.0

    steps:
      - run:
          name: when previous job fails
          when: on_fail

      - run: echo previous job don fail

  
  


  

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  my_workflows:
    jobs:
      - my_job
      - test_fail_job
      - onfail_job_check